{"name": "test_rabbitmq_publish_consume", "status": "broken", "statusDetails": {"message": "socket.gaierror: [Errno 11001] getaddrinfo failed", "trace": "rabbitmq_config = {'host': 'rabbitmq', 'password': 'guest', 'port': 5672, 'queue': 'httpbin_test_queue', ...}\n\n    def test_rabbitmq_publish_consume(rabbitmq_config):\n        payload = random_user()\n>       received = publish_and_consume(rabbitmq_config, payload)\n\ntests\\test_messaging_rabbitmq.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\test_messaging_rabbitmq.py:11: in publish_and_consume\n    conn = pika.BlockingConnection(parameters)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pika\\adapters\\blocking_connection.py:360: in __init__\n    self._impl = self._create_connection(parameters, _impl_class)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pika\\adapters\\blocking_connection.py:451: in _create_connection\n    raise self._reap_last_connection_workflow_error(error)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pika\\adapters\\utils\\selector_ioloop_adapter.py:565: in _resolve\n    result = socket.getaddrinfo(self._host, self._port, self._family,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nhost = 'rabbitmq', port = 5672, family = 0, type = <SocketKind.SOCK_STREAM: 1>, proto = 6, flags = 0\n\n    def getaddrinfo(host, port, family=0, type=0, proto=0, flags=0):\n        \"\"\"Resolve host and port into list of address info entries.\n    \n        Translate the host/port argument into a sequence of 5-tuples that contain\n        all the necessary arguments for creating a socket connected to that service.\n        host is a domain name, a string representation of an IPv4/v6 address or\n        None. port is a string service name such as 'http', a numeric port number or\n        None. By passing None as the value of host and port, you can pass NULL to\n        the underlying C API.\n    \n        The family, type and proto arguments can be optionally specified in order to\n        narrow the list of addresses returned. Passing zero as a value for each of\n        these arguments selects the full range of results.\n        \"\"\"\n        # We override this function since we want to translate the numeric family\n        # and socket type values to enum constants.\n        addrlist = []\n>       for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nE       socket.gaierror: [Errno 11001] getaddrinfo failed\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\socket.py:977: gaierror"}, "attachments": [{"name": "log", "source": "ad075c1e-dcfe-41bc-a85c-91c36eb02e3c-attachment.txt", "type": "text/plain"}], "start": 1758209448206, "stop": 1758209450901, "uuid": "e135f117-68b4-4c26-9a0d-8e1c0fc00ee4", "historyId": "1fe95fb095cf380267b1ead373e6c6d5", "testCaseId": "1fe95fb095cf380267b1ead373e6c6d5", "fullName": "tests.test_messaging_rabbitmq#test_rabbitmq_publish_consume", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_messaging_rabbitmq"}, {"name": "host", "value": "Lalu"}, {"name": "thread", "value": "13432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_messaging_rabbitmq"}]}